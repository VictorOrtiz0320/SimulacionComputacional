x$pi=as.factor(x$pi)
boxplot(x)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x))
resultados=cbind(pi,epidemia)
x=rbind(x,resultados,pi)
x$pi=as.factor(x$pi)
x$pi
boxplot(x)
boxplot(data=x, pi~epidemias)
boxplot(data=x, pi~epidemia)
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(x)
boxplot(x, epidemia~pi)
boxplot(data=x, epidemia~pi)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(x)
View(resultados)
View(resultados)
names(resultados)=c("Pinfectados","Epi")
View(resultados)
View(resultados)
colnames(resultados)=c("Pinfectados","Epi")
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
resultados=cbind(pi,epidemia)
names(resultados)=c("Pinfectados","Epi")
resultados$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
x=data.frame()
x=rbind(pi,epidemia)
names(x)=c("Pinfectados","Epi")
x$Pinfectados=as.factor(x$Pinfectados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=resultados, Pinfectados~Epi, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
boxplot(data=resultados, Epi~Pinfectados, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/p7sinp.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
names(caminatas)=c("Replicas","Paso","x","y","f(x,y)")
View(caminatas)
View(caminatas)
caminatas$Replicas=as.factor(caminatas$Replicas)
plot(data=caminatas,Paso~f(x,y))
plot(data=caminatas,f(x,y)~Paso)
boxplot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type=1)
plot(data=caminatas,f(x,y)~Paso,type="1")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type="1")
plot(data=caminatas,f(x,y)~Paso)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso,type="p")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="b")
plot(data=caminatas,f(x,y)~Paso,type="c")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="s")
plot(data=caminatas,f(x,y)~Paso,type="S")
plot(data=caminatas,f(x,y)~Paso,type="n")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="p")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
line(data=caminatas,f(x,y)~Paso,type="p")
lines(data=caminatas,f(x,y)~Paso,type="p")
points(data=caminatas,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col=c("red","blue","yellow","purple","orange")
)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
rompiendo <- function(i){
cumulos <- integer()
urna <- freq[i,]
if (urna$tam > 1) { # no tiene caso romper si no se puede
cumulos <- c(cumulos, romperse(urna$tam, urna$num))
} else {
cumulos <- c(cumulos, rep(1, urna$num))
}
return(cumulos)
}
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
traceback()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(cumulos,
#, breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.05), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
png(paste("p8_ct", tl, ".png", sep=""), width=300, height=300)
#tope <- 50 * ceiling(max(cumulos) / 50)
hist(cumulos,
#breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.3), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
graphics.off()
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
View(f)
View(f)
View(f)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
f
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
val<-matrix(foreach(j=1:k, .combine = rbind) %dopar% Fsoluciones(j), nrow = n, ncol = k, byrow = TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
obj
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
obj
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
dominadores
val
no.dom
frente
tam
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Reto1.R', echo=TRUE)
ggplot(data=Resultados, aes(Resultados$nObjetivos, (Resultados$Frente/n)*100)) +
geom_violin(scale="width",fill="dodgerblue4", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue2", color="aliceblue")+
xlab("Número de funciones objetivo k") +
ylab("Porcentaje de funciones no dominantes (%)")+
theme_grey()
library(ggplot2)
ggplot(data=Resultados, aes(Resultados$nObjetivos, (Resultados$Frente/n)*100)) +
geom_violin(scale="width",fill="dodgerblue4", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue2", color="aliceblue")+
xlab("Número de funciones objetivo k") +
ylab("Porcentaje de funciones no dominantes (%)")+
theme_grey()
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
setwd("~/GitHub/SimulacionComputacional/Proyecto")
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
##### Condiciones ###
concentracion.cmc<-15 #mg/mL
volumen.cmc<-20 #mL
contenido.plata<-1 #mg
mw<-250*(10**3) #k(g/mol)
DS=1.2
temperatura<-90 #Centigrados
tiempo<-24 #horas
reduccion<-0.4*(10**-17)
## Calculos ###
avogrado<-6.023*(10**23) #avogrado
cmc<-volumen.cmc*concentracion.cmc  #g
moleculas.cmc<- round(avogrado*cmc*reduccion/mw)
plata<-contenido.plata*(10**-3) #gramos
masa.plata<-108 #g/mol
atomos.plata<- round(avogrado*plata*reduccion/masa.plata)
posiciones<-c(2,3,5)
polimerizacion<-function (){
base<-rep("P",7)
for (j in 1:length(posiciones)){
cation<-posiciones[j]
if (runif(1,0,1)<(DS/3)){
base[cation]<-"C"
}
}
return(base)
}
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
polimero<-foreach(1:moleculas.cmc,.combine=c)%dopar%polimerizacion()
stopImplicitCluster()
l<-2
cadenas<-as.data.frame(polimero)
cadenas$x<-0
cadenas$y<-0
cadenas[1,]$x<-runif(1,0,l)
cadenas[1,]$y<-runif(1,0,l)
paso<-l/100
dimension<-c(1:2)
dim(cadenas)[1]
for (g in 2:dim(cadenas)[1]){
for (d in 1:length(dimension)){
if(runif(1)<0.5){
cadenas[g,d+1]<-cadenas[g-1,d+1]-paso}else{
cadenas[g,d+1]<-cadenas[g-1,d+1]+paso
}
# if (cadenas[g,d+1]<0){cadenas[g,d+1]<-cadenas[d,d+1]+l}
#if (cadenas[g,d+1]>l){cadenas[g,d+1]<-cadenas[d,d+1]-l}
}
print(round(g*100/dim(cadenas)[1]))
}
library(ggplot2)
polymer<-ggplot()+
geom_point(data=cadenas,aes(x=cadenas$x,y=cadenas$y,color=factor(cadenas$polimero)))+
xlab("x")+ylab("y")
Ag<- data.frame(x = runif(atomos.plata,min(cadenas$x),max(cadenas$x)),
y=runif(atomos.plata,min(cadenas$y),max(cadenas$y)))
polymer+
geom_point(data=Ag,aes(x=Ag$x,y=Ag$y))
doble.capa<-particulas
library(ggplot2)
#Declaración del dataframe con las partículas iniciales
l<-1.5
velocidad<-l/60
n <- 10 #Número de particulas
particulas<- data.frame(x = double(), y = double(), dx = double(), dy = double(), espesor=double(),rf=double())
for(i in 1:n){
particulas <-rbind(particulas, data.frame(x = runif(1, 0, l), y=runif(1, 0, l), c =-5, r=5, dx=runif(1,-velocidad,velocidad), dy=runif(1,-velocidad,velocidad), espesor=runif(1,0.01,1),rf<-r+espesor))
}
library(ggplot2)
#Declaración del dataframe con las partículas iniciales
l<-1.5
velocidad<-l/60
n <- 10 #Número de particulas
particulas<- data.frame(x = double(), y = double(), dx = double(), dy = double(), espesor=double())
for(i in 1:n){
particulas <-rbind(particulas, data.frame(x = runif(1, 0, l), y=runif(1, 0, l), c =-5, r=5, dx=runif(1,-velocidad,velocidad), dy=runif(1,-velocidad,velocidad), espesor=runif(1,0.01,1)))
}
particulas$rf<-particulas$r+particulas$espesor
library(ggplot2)
#Declaración del dataframe con las partículas iniciales
l<-1.5
velocidad<-l/60
n <- 10 #Número de particulas
particulas<- data.frame(x = double(), y = double(), dx = double(), dy = double(), espesor=double())
for(i in 1:n){
particulas <-rbind(particulas, data.frame(x = runif(1, 0, l), y=runif(1, 0, l), c =-5, r=5, dx=runif(1,-velocidad,velocidad), dy=runif(1,-velocidad,velocidad), espesor=runif(1,0.01,1)))
}
particulas$rf<-particulas$r+particulas$espesor
#Movimiento Browniano
tmax<-10
for (tiempo in 1:tmax){
for(i in 1:n){
p<-particulas[i,]
p$x<- p$x + p$dx
p$y<- p$y + p$dy
if (p$x > l) {
p$x <- p$x - l
}
if (p$y > l) {
p$y <- p$y - l
}
if (p$x < 0) {
p$x <- p$x + l
}
if (p$y < 0) {
p$y <- p$y + l
}
particulas[i,]<-p
}
#Graficar la simulación
ggplot() +
geom_point(data=particulas, aes(x = particulas$x, y= particulas$y,size=particulas$rf))+
geom_point(data=particulas, aes(x = particulas$x, y= particulas$y),color="blue")+
scale_x_continuous(name="x",limits = c(0, 1.5))+
scale_y_continuous(name="y",limits = c(0, 1.5))+
scale_colour_manual(values=colores)+
ggtitle(paste("Paso",tiempo))+
theme(plot.title = element_text(hjust = 0.5, size = 15))+
#guides(color=guide_legend(title="Carga"))+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
guides(size=guide_legend(title="Radio"))+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", vjust=-0.5, colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", vjust=1.5, colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))
ggsave(paste("Proyecto_p_",tiempo,".png"))
}
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
polymer
source('~/GitHub/SimulacionComputacional/Proyecto/proyecto.R', echo=TRUE)
