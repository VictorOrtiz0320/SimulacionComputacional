source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
rompiendo <- function(i){
cumulos <- integer()
urna <- freq[i,]
if (urna$tam > 1) { # no tiene caso romper si no se puede
cumulos <- c(cumulos, romperse(urna$tam, urna$num))
} else {
cumulos <- c(cumulos, rep(1, urna$num))
}
return(cumulos)
}
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
traceback()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(cumulos,
#, breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.05), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
png(paste("p8_ct", tl, ".png", sep=""), width=300, height=300)
#tope <- 50 * ceiling(max(cumulos) / 50)
hist(cumulos,
#breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.3), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
graphics.off()
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
View(f)
View(f)
View(f)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
f
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
val<-matrix(foreach(j=1:k, .combine = rbind) %dopar% Fsoluciones(j), nrow = n, ncol = k, byrow = TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
obj
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
obj
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Original.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
dominadores
val
no.dom
frente
tam
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
val
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/Reto1.R', echo=TRUE)
ggplot(data=Resultados, aes(Resultados$nObjetivos, (Resultados$Frente/n)*100)) +
geom_violin(scale="width",fill="dodgerblue4", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue2", color="aliceblue")+
xlab("Número de funciones objetivo k") +
ylab("Porcentaje de funciones no dominantes (%)")+
theme_grey()
library(ggplot2)
ggplot(data=Resultados, aes(Resultados$nObjetivos, (Resultados$Frente/n)*100)) +
geom_violin(scale="width",fill="dodgerblue4", color="black")+
geom_boxplot(width=0.2, fill="dodgerblue2", color="aliceblue")+
xlab("Número de funciones objetivo k") +
ylab("Porcentaje de funciones no dominantes (%)")+
theme_grey()
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
setwd("~/GitHub/SimulacionComputacional/P12")
source('~/GitHub/SimulacionComputacional/P12/Reto1.R', echo=TRUE)
save.image(file = "Practica11chido.RData")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
source('~/GitHub/SimulacionComputacional/P12/Reto1.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
load("C:/Users/Sobrenatural/Documents/GitHub/SimulacionComputacional/P12/Practica11chido.RData")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
load("C:/Users/Sobrenatural/Documents/GitHub/SimulacionComputacional/P12/Practica11chido.RData")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
names(Resultados)=c("nPrueba","tipo","Paciertos","negro","gris","blanco")
View(Resultados)
load("C:/Users/Sobrenatural/Documents/GitHub/SimulacionComputacional/P12/Imagenes/Practica11chido.RData")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(color=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(color=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(color=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
#guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Paciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
names(Resultados)=c("nPrueba","tipo","Aciertos(%)","negro","gris","blanco")
names(Resultados)=c("nPrueba","tipo","Aciertos","negro","gris","blanco")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
#guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
#guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
#guides(fill=guide_legend(title = "Porcentaje de aciertos"))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
library(ggplot2)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
library(ggplot2)
split.screen(c(3,1))
split.screen(c(1,2), screen = 1)
screen(1)
ggplot(Resultados, aes(negro, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "n-b.png")
screen(2)
ggplot(Resultados, aes(gris, blanco)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-b.png")
screen(3)
ggplot(Resultados, aes(gris, negro)) +
geom_raster(aes(fill=Aciertos)) +
scale_fill_gradient(low="dodgerblue", high="dodgerblue4")+
theme(legend.title = element_text(colour="black", size=15))+
theme(legend.text = element_text(colour="black", size = 15))+
theme(axis.title.x = element_text(face="bold", colour="black", size=18)) +
theme(axis.title.y = element_text(face="bold", colour="black", size=18)) +
theme(axis.text.x=element_text(size=18), axis.text.y=element_text(size=18))+
coord_fixed(ratio = 1)
ggsave(filename = "g-n.png")
dev.off()
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
png("P12P.png",width=800, height=1000,pointsize = 15)
boxplot(Paciertos~tipo*nPrueba,data=Resultados,col = c("chartreuse","dodgerblue"),border=c("chartreuse4","dodgerblue4"),xlab="Número de pruebas",ylab="Porcentaje de acierto (%)")
legend("topright", inset=.02,
c("Original","Paralelizado"), fill=c("chartreuse","dodgerblue"), horiz=TRUE, cex=0.8,box.lty = 0)
graphics.off()
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12p.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P12/P12T.R', echo=TRUE)
