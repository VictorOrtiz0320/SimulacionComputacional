return(contagios[j] <- TRUE)
}
}
}
}
}
}
Tinicial=Sys.time()
l <- 1.5
n <- 50
pi <- 0.1
pr <- 0.02
v <- l / 60
n <- 50
agentes <- data.frame(x = double(), y = double(), dx = double(), dy = double(), estado  = character())
for (i in 1:n) {
e <- "S"
if (runif(1) < pi) {
e <- "I"
}
agentes <- rbind(agentes, data.frame(x = runif(1, 0, l), y = runif(1, 0, l),
dx = runif(1, -v, v), dy = runif(1, -v, v),
estado = e))
levels(agentes$estado) <- c("S", "I", "R")
}
epidemia <- integer()
r <- 0.1
tmax <- 100
digitos <- floor(log(tmax, 10)) + 1
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
contagios=rep(FALSE,n)
a1 <- agentes[i, ]
View(a1)
View(a1)
if (a1$estado == "I") { # desde los infectados
for (j in 1:n) {
if (!contagios[j]) { # aun sin contagio
a2 <- agentes[j, ]
if (a2$estado == "S") { # hacia los susceptibles
dx <- a1$x - a2$x
dy <- a1$y - a2$y
d <- sqrt(dx^2 + dy^2)
if (d < r) { # umbral
p <- (r - d) / r
if (runif(1) < p) {
return(contagios[j] <- TRUE)
}
}
}
}
}
}
}
a1
a1
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
contagios
contagiios
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
epidemia
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
epidemia
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
epidemia
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
epidemia
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/p6.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
boxplot(Resultados)
View(Resultados)
View(Resultados)
source('~/.active-rstudio-document', echo=TRUE)
boxplot(Resultados)
boxplot(Resultados)
Resultados
source('~/.active-rstudio-document', echo=TRUE)
Resultados
source('~/.active-rstudio-document', echo=TRUE)
PP
PO
source('~/.active-rstudio-document', echo=TRUE)
Resultados=cbind(PP,PO)
boxplot(Resultados)
names(Resultados)=c("Programa P, Programa O")
boxplot(Resultados)
Resultados
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
names(Resultados)=c("Programa P, Programa O")
Resultados
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
col.names(Resultados)=c("Programa P, Programa O")
Resultados=cbind(PP,PO)
col.names(Resultados)=c("Programa P, Programa O")
data.frame.names(Resultados)=c("Programa P, Programa O")
names(Resultados)=c("Programa P, Programa O")
source('~/.active-rstudio-document', echo=TRUE)
View(Resultados)
View(Resultados)
colnames(Resultados)=c("Programa P, Programa O")
View(Resultados)
View(Resultados)
colnames(Resultados)=c("T,Programa P, Programa O")
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("Programa P, Programa O")
boxplot(Resultados)
traceback()
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP, ProgramaO")
boxplot(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP")
boxplot(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP,o,p,i")
boxplot(Resultados)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
boxplot(x)
colnames(x)=c("Programa Paralelizado, Programa Original")
boxplot(x)
colnames(Resultados)=c("Programa Paralelizado, Programa Original")
boxplot(Resultados)
View(x)
View(x)
colnames(x)=c("Programa Paralelizado", "Programa Original")
boxplot(x)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
x
View(x)
View(x)
boxplot(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x)
View(x)
View(x)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x)
boxplot(resultados)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(resultados)
View(resultados)
x$pi=as.factor(x$pi)
boxplot(x)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x))
resultados=cbind(pi,epidemia)
x=rbind(x,resultados,pi)
x$pi=as.factor(x$pi)
x$pi
boxplot(x)
boxplot(data=x, pi~epidemias)
boxplot(data=x, pi~epidemia)
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(x)
boxplot(x, epidemia~pi)
boxplot(data=x, epidemia~pi)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(x)
View(resultados)
View(resultados)
names(resultados)=c("Pinfectados","Epi")
View(resultados)
View(resultados)
colnames(resultados)=c("Pinfectados","Epi")
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
resultados=cbind(pi,epidemia)
names(resultados)=c("Pinfectados","Epi")
resultados$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
x=data.frame()
x=rbind(pi,epidemia)
names(x)=c("Pinfectados","Epi")
x$Pinfectados=as.factor(x$Pinfectados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=resultados, Pinfectados~Epi, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
boxplot(data=resultados, Epi~Pinfectados, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/p7sinp.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
names(caminatas)=c("Replicas","Paso","x","y","f(x,y)")
View(caminatas)
View(caminatas)
caminatas$Replicas=as.factor(caminatas$Replicas)
plot(data=caminatas,Paso~f(x,y))
plot(data=caminatas,f(x,y)~Paso)
boxplot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type=1)
plot(data=caminatas,f(x,y)~Paso,type="1")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type="1")
plot(data=caminatas,f(x,y)~Paso)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso,type="p")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="b")
plot(data=caminatas,f(x,y)~Paso,type="c")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="s")
plot(data=caminatas,f(x,y)~Paso,type="S")
plot(data=caminatas,f(x,y)~Paso,type="n")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="p")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
line(data=caminatas,f(x,y)~Paso,type="p")
lines(data=caminatas,f(x,y)~Paso,type="p")
points(data=caminatas,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col=c("red","blue","yellow","purple","orange")
)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
c=c(6,5,4,6,0,8,8)
sum(c)
c=c(6,5,4,6,0,8,8)
sum(c)
mean(c)
source('~/.active-rstudio-document', echo=TRUE)
c=c(6,5,4,6,0,8,8,8,8,8,8,8)
mean(c)
source('~/.active-rstudio-document', echo=TRUE)
cumulos
k
n
k <- 1000
n <- 100000
cumulos <- rnorm(100)
cumulos
xyplot(cumulos)
plot(cumulos)
hist(cumulos)
min(cumulos)
cumulos
cumulos <- cumulos - min(cumulos) # ahora el menor vale cero
cumulos
cumulos <- cumulos + 1 # ahora el menor vale uno
cumulos
cumulos <- cumulos / sum(cumulos) # ahora suman a uno
cumulos
cumulos <- n * cumulos # ahora suman a n, pero son valores decimales
cumulos
cumulos <- round(cumulos) # ahora son enteros, pero no necesariamente suman a n
cumulos
diferencia <- n - sum(cumulos) # por cuanto le hemos fallado
diferencia
sum(cumulos)
hist(cumulos)
if (diferencia > 0) { # faltan particulas
for (i in 1:diferencia) {
p <- sample(1, 1:k) # elegimos uno al azar
cumulos[p] <- cumulos[p] + 1 # agregamos particula
}
} else if (diferencia < 0) { # sobran particulas
for (i in 1:-diferencia) {
p <- sample(1, 1:k) # elegimos uno al azar
if (cumulos[p] > 1) { # sin vaciar
cumulos[p] <- cumulos[p] - 1 # restamos particula
}
}
}
png("p8_init.png")
plot(hist(cumulos), main="Estado inicial",
xlab="Tama\u{00f1}o de c\u{00fa}mulos", ylab="Frecuencia absoluta")
graphics.off()
hist(cumulos)
setwd("~/GitHub/SimulacionComputacional/P8")
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
k <- 1000
n <- 100000
originales <- rnorm(k)
originales
cumulos <- originales - min(originales)  + 1
cumulos
cumulos <- round(n * cumulos / sum(cumulos))
cumulos
cumulos <- round(cumulos)
cumulos
diferencia <- n - sum(cumulos
)
diferencia
if (diferencia > 0) {
for (i in 1:diferencia) {
p <- sample(1:k, 1)
cumulos[p] <- cumulos[p] + 1
}
} else if (diferencia < 0) {
for (i in 1:-diferencia) {
p <- sample(1:k, 1)
if (cumulos[p] > 1) {
cumulos[p] <- cumulos[p] - 1
}
}
}
png("p8_norm.png")
par(mfrow = c(2, 2)) # juntamos graficas
plot(density(originales)) # lo generado que era normal
print(shapiro.test(originales))
qqnorm(originales)
qqline(originales, col = 2)
plot(density(cumulos)) # lo nuestro que hemos modificado
print(shapiro.test(cumulos))
qqnorm(cumulos)
qqline(cumulos, col = 2)
graphics.off()
setwd("~/GitHub/SimulacionComputacional/P8")
source('~/GitHub/SimulacionComputacional/P8/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/ejemplo3.R', echo=TRUE)
low
high
source('~/GitHub/SimulacionComputacional/P8/ejemplo4.R', echo=TRUE)
low
high
source('~/GitHub/SimulacionComputacional/P8/ejemplo4.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/ejemplo4.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
res
freq
freq$tam <- as.numeric(levels(freq$tam))[freq$tam]
View(freq)
View(freq)
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
View(freq)
View(freq)
dim(freq)[1]
dim(freq)[2]
dim(freq)[3]
dim(freq)[1]
View(freq)
View(freq)
dim(freq)[0]
dim(freq)[1]
View(urna)
View(urna)
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
pedazos
urna
freq
cumulos
c
d
table(cumulos)
as.data.frame(table(cumulos))
freq$tam <- as.numeric(levels(freq$tam))[freq$tam]
freq
freq
source('~/GitHub/SimulacionComputacional/P8/ejemplo1.R', echo=TRUE)
View(freq)
View(freq)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("testit")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
setwd("~/GitHub/SimulacionComputacional/P8")
source('~/GitHub/SimulacionComputacional/P8/codigochido.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
