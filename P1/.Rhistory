suppressMessages(library("sna"))
png("p2_t0.png")
sna
library(sna)
plot.sociomatrix(actual, diaglab=FALSE, main="Inicio")
library(parallel)
dim <- 10
num <-  dim^2
proba=0.20
res=1-proba
repetir=9
actual=matrix(sample(c(1:0),num, prob=c(proba,res),replace=TRUE),nrow=dim, ncol=dim)
#actual <- matrix(round(runif(num)), nrow=dim, ncol=dim)#
suppressMessages(library("sna"))
png("p2_t0.png")
plot.sociomatrix(actual, diaglab=FALSE, main="Inicio")
graphics.off()
paso <- function(p) {
fila <- floor((p - 1) / dim) + 1
columna <- ((p - 1) %% dim) + 1
vecindad <-  actual[max(fila - 1, 1) : min(fila + 1, dim),max(columna - 1, 1): min(columna + 1, dim)]
return(1 * ((sum(vecindad) - actual[fila, columna]) == 3))
}
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "dim")
clusterExport(cluster, "paso")
for (iteracion in 1:9) {
clusterExport(cluster, "actual")
siguiente <- parSapply(cluster, 1:num, paso)
if (sum(siguiente) == 0) { # todos murieron
print("Ya no queda nadie vivo.")
break;
}
actual <- matrix(siguiente, nrow=dim, ncol=dim, byrow=TRUE)
salida = paste("p2_t", iteracion, ".png", sep="")
tiempo = paste("Paso", iteracion)
png(salida)
plot.sociomatrix(actual, diaglab=FALSE, main=tiempo)
graphics.off()
}
stopCluster(cluster)
plot.sociomatrix(actual, diaglab=FALSE, main=tiempo)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
setwd("~/GitHub/SimulacionComputacional/P1")
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
View(actual)
View(paso)
actual
clear
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
probabilidad
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
probabilidad
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
probabilidad
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
proba
res
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/Practica 1.R', echo=TRUE)
data
datos
boxplot(datos)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
boxplot(datos)
siguiente
iteracion
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
boxplot(datos)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
boxplot(datos)
resultado
siguiente
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
datos1
resultado
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
resul
source('~/GitHub/SimulacionComputacional/P1/Practica 1.R', echo=TRUE)
resultado
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
proba
res
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
x
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
x
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
x
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
x
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
x
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
ite
iteracion
warnings()
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
y
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/.active-rstudio-document', echo=TRUE)
e
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
e
source('~/.active-rstudio-document', echo=TRUE)
e
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
iteracion
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/.active-rstudio-document', echo=TRUE)
e
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
iteracion
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
boxplot(datos)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
warnings()
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos1
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
datos
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
probabilidad
repetir
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
probabilidad
repetir
iteracion
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
probabilidad
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
yi[repetir-1,probabilidad-1]=iteracion-1
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
repetir
probabilidad
proba
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
i
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
data.frame(yi)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
boxplot(yi)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
boxplot(datos)
boxplot(datos,xlab=0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)
boxplot(datos,xlab="0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9")
boxplot(datos,names.arg=0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)
boxplot(datos,names.arg=0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)
boxplot(datos,names.arg=0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9)
boxplot(datos,names.arg="0.1,0.2,0.3,0.4,0.5,0.6,0.7,0.8,0.9")
datos
boxplot.default(datos,names.arg=x)
boxplot.default(datos)
boxplot.default(datos)
boxplot.default(datos,names.arg=x)
boxplot.default(datos,names.arg=proba)
boxplot.default(datos,names.arg="hola")
boxplot.default(yi)
boxplot.matrix(datos)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
library(parallel)
dim <- 10
num <-  dim^2
repetir=1
yi=matrix(rep(0),nrow=repetir,ncol = probabilidad)
datos=data.frame()
for (probabilidad in 1:9){
proba=probabilidad/10
res=1-proba
for (i in 1:repetir){
x[probabilidad]=c(proba)
actual=matrix(sample(c(1:0),num, prob=c(proba,res),replace=TRUE),nrow=dim, ncol=dim)
suppressMessages(library("sna"))
png("p2_t0.png")
plot.sociomatrix(actual, diaglab=FALSE, main="Inicio")
graphics.off()
paso <- function(p) {
fila <- floor((p - 1) / dim) + 1
columna <- ((p - 1) %% dim) + 1
vecindad <-  actual[max(fila - 1, 1) : min(fila + 1, dim),max(columna - 1, 1): min(columna + 1, dim)]
return(1 * ((sum(vecindad) - actual[fila, columna]) == 3))
}
cluster <- makeCluster(detectCores() - 1)
clusterExport(cluster, "dim")
clusterExport(cluster, "paso")
for (iteracion in 1:9) {
clusterExport(cluster, "actual")
siguiente <- parSapply(cluster, 1:num, paso)
if (sum(siguiente) == 0) { # todos murieron
print("Ya no queda nadie vivo.")
break;
}
actual <- matrix(siguiente, nrow=dim, ncol=dim, byrow=TRUE)
salida = paste("p2_t", iteracion, ".png", sep="")
tiempo = paste("Paso", iteracion)
png(salida)
plot.sociomatrix(actual, diaglab=FALSE, main=tiempo)
graphics.off()
}
print(iteracion)
stopCluster(cluster)
plot.sociomatrix(actual, diaglab=FALSE, main=tiempo)
yi[i,probabilidad]=iteracion
}
}
datos=data.frame(yi)
boxplot(yi,xlab="Probabilidades",ylab="Número de pasos",main="Práctica 2")
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
probabilidad
proba
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
yi
source('~/GitHub/SimulacionComputacional/P1/practica2.R', echo=TRUE)
