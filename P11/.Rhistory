Resultados
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
names(Resultados)=c("Programa P, Programa O")
Resultados
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
col.names(Resultados)=c("Programa P, Programa O")
Resultados=cbind(PP,PO)
col.names(Resultados)=c("Programa P, Programa O")
data.frame.names(Resultados)=c("Programa P, Programa O")
names(Resultados)=c("Programa P, Programa O")
source('~/.active-rstudio-document', echo=TRUE)
View(Resultados)
View(Resultados)
colnames(Resultados)=c("Programa P, Programa O")
View(Resultados)
View(Resultados)
colnames(Resultados)=c("T,Programa P, Programa O")
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("Programa P, Programa O")
boxplot(Resultados)
traceback()
View(Resultados)
View(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP, ProgramaO")
boxplot(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP")
boxplot(Resultados)
Resultados=cbind(PP,PO)
colnames(Resultados)=c("ProgramaP,o,p,i")
boxplot(Resultados)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
boxplot(x)
colnames(x)=c("Programa Paralelizado, Programa Original")
boxplot(x)
colnames(Resultados)=c("Programa Paralelizado, Programa Original")
boxplot(Resultados)
View(x)
View(x)
colnames(x)=c("Programa Paralelizado", "Programa Original")
boxplot(x)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
x
View(x)
View(x)
boxplot(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x)
View(x)
View(x)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x)
boxplot(resultados)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(resultados)
View(resultados)
x$pi=as.factor(x$pi)
boxplot(x)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x), use.cols=FALSE)
boxplot(data.matrix(x))
resultados=cbind(pi,epidemia)
x=rbind(x,resultados,pi)
x$pi=as.factor(x$pi)
x$pi
boxplot(x)
boxplot(data=x, pi~epidemias)
boxplot(data=x, pi~epidemia)
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
boxplot(data=x, pi~epidemia,xlab="pi",ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
boxplot(x)
boxplot(x, epidemia~pi)
boxplot(data=x, epidemia~pi)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=x, pi~epidemia, xlab="pi", ylab="epidemia")
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(x)
View(x)
View(x)
View(resultados)
View(resultados)
names(resultados)=c("Pinfectados","Epi")
View(resultados)
View(resultados)
colnames(resultados)=c("Pinfectados","Epi")
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
x$Pinfectados=as.factor(x$Pinfectados)
resultados=cbind(pi,epidemia)
names(resultados)=c("Pinfectados","Epi")
resultados$Pinfectados=as.factor(x$Pinfectados)
x=rbind(x,resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
x=data.frame()
x=rbind(pi,epidemia)
names(x)=c("Pinfectados","Epi")
x$Pinfectados=as.factor(x$Pinfectados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
boxplot(data=resultados, Pinfectados~Epi, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
boxplot(data=resultados, Epi~Pinfectados, xlab="pi", ylab="epidemia")
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P6/reto2/reto2.R', echo=TRUE)
View(resultados)
View(resultados)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/p7sinp.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
View(caminatas)
View(caminatas)
names(caminatas)=c("Replicas","Paso","x","y","f(x,y)")
View(caminatas)
View(caminatas)
caminatas$Replicas=as.factor(caminatas$Replicas)
plot(data=caminatas,Paso~f(x,y))
plot(data=caminatas,f(x,y)~Paso)
boxplot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type=1)
plot(data=caminatas,f(x,y)~Paso,type="1")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso)
plot(data=caminatas,f(x,y)~Paso,type="1")
plot(data=caminatas,f(x,y)~Paso)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
plot(data=caminatas,f(x,y)~Paso,type="p")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="b")
plot(data=caminatas,f(x,y)~Paso,type="c")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="s")
plot(data=caminatas,f(x,y)~Paso,type="S")
plot(data=caminatas,f(x,y)~Paso,type="n")
plot(data=caminatas,f(x,y)~Paso,type="o")
plot(data=caminatas,f(x,y)~Paso,type="l")
plot(data=caminatas,f(x,y)~Paso,type="p")
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
line(data=caminatas,f(x,y)~Paso,type="p")
lines(data=caminatas,f(x,y)~Paso,type="p")
points(data=caminatas,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col="red")
points(data=caminatas,f(x,y)~Paso,pch=16,col=c("red","blue","yellow","purple","orange")
)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/ejemplo3/ejemplo3.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P7/p7/p7.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
rompiendo <- function(i){
cumulos <- integer()
urna <- freq[i,]
if (urna$tam > 1) { # no tiene caso romper si no se puede
cumulos <- c(cumulos, romperse(urna$tam, urna$num))
} else {
cumulos <- c(cumulos, rep(1, urna$num))
}
return(cumulos)
}
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
traceback()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
hist(cumulos,
#, breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.05), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P8/p8paralelizado.R', echo=TRUE)
png(paste("p8_ct", tl, ".png", sep=""), width=300, height=300)
#tope <- 50 * ceiling(max(cumulos) / 50)
hist(cumulos,
#breaks=seq(0, tope, 50),
main=paste("Paso", paso, "con ambos fen\u{00f3}menos"), freq=FALSE,
ylim=c(0, 0.3), xlab="Tama\u{00f1}o", ylab="Frecuencia relativa")
graphics.off()
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
View(f)
View(f)
View(f)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(f)
View(f)
f
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(data)
data
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
View(data)
View(data)
data
setwd("~/GitHub/SimulacionComputacional/P11")
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
names(Resultados)=c("nObjetivos","nSoluciones")
Resultados$Tiempo<-as.numeric(levels(Resultados$Tiempo))[Resultados$Tiempo]
Resultados$tipo=as.factor(Resultados$tipo)
names(Resultados)=c("nObjetivos","nSoluciones")
View(Resultados)
View(Resultados)
Resultados
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
data
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
Resultados
data
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
Resultados
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
View(data)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
data <- data.frame(pos=rep(0, n), dom=dominadores)
#png("p11_violin.png")
gr <- ggplot(data, aes(x=pos, y=dom)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
Resultados
names(Resultados)=c("Dominadores","nObjetivos","nSoluciones")
Resultados
View(Resul)
View(Resul)
datos2= Resultados[which(Resultados$Dominadores==2),]
gr <- ggplot(datos2, aes(x=0, y=dom)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
ggsave(file=paste("p11_violin", k,".png", sep='')) #Nombre del jpeg
datos2= Resultados[which(Resultados$Dominadores==2),]
gr <- ggplot(datos2, aes(x=0, y=dominadores)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
ggsave(file=paste("p11_violin", k,".png", sep='')) #Nombre del jpeg
datos2= Resultados[which(Resultados$Dominadores==2),]
gr <- ggplot(datos2, aes(x=0, y=dominadores)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
datos2
datos2= Resultados[which(Resultados$Dominadores==2),]
suppressMessages(library(doParallel))
registerDoParallel(makeCluster(detectCores() - 1))
library(ggplot2) # recordar instalar si hace falta
Resultados=data.frame()
Toriginal=numeric()
Final<- data.frame()
Resul<- data.frame()
for (n in c(200)){
for (k in seq(2,12,2)){
source('~/GitHub/SimulacionComputacional/P11/P11.R', encoding = 'UTF-8')
Toriginal=cbind(dominadores,k,n)
Resultados=rbind(Resultados,Toriginal)
}
}
stopImplicitCluster()
names(Resultados)=c("Dominadores","nObjetivos","nSoluciones")
datos2= Resultados[which(Resultados$Dominadores==2),]
datos2
datos2= Resultados[which(Resultados$nObjetivos==2),]
datos2
gr <- ggplot(datos2, aes(x=0, y=dominadores)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
gr <- ggplot(Resultados, aes(x=nObjetivos, y=dominadores)) + geom_violin(fill="orange", color="red")
gr + geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
ggsave(file=paste("p11_violin", k,".png", sep='')) #Nombre del jpeg
ggplot(Resultados, aes(x=nObjetivos, y=dominadores)) + geom_violin(fill="orange", color="red")
+geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
ggsave(file=paste("p11_violin", k,".png", sep='')) #Nombre del jpeg
ggplot(Resultados, aes(x=nObjetivos, y=dominadores)) + geom_violin(fill="orange", color="red")
+geom_boxplot(width=0.2, fill="blue", color="white", lwd=2) +
xlab("") +
ylab("Frecuencia") +
ggtitle("Cantidad de soluciones dominantes")
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
Resultados
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
ggplot(data=Resultados, aes(Resultados$nObjetivos, Resultados$Dominadores)) +
geom_violin(scale="width",fill="orange", color="red")+
geom_boxplot(width=0.2, fill="blue", color="white", lwd=2)+
xlab("") +
ylab("Frecuencia")+
ggtitle("Cantidad de soluciones dominantes")
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
traceback()
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
source('~/GitHub/SimulacionComputacional/P11/P11V.R', echo=TRUE)
